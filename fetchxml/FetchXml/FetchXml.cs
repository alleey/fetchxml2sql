//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.490.0.
using System.Xml.Serialization;
using System;
using System.ComponentModel;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;

namespace FetchXml.Model
{
    [SerializableAttribute()]
    [XmlTypeAttribute("FetchAttributeType", Namespace="")]
    public partial class Attribute
    {
        [RequiredAttribute()]
        [XmlAttributeAttribute("name")]
        public string Name { get; set; }

        [XmlAttributeAttribute("build")]
        public Build Build { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Build property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BuildSpecified { get; set; }

        [XmlAttributeAttribute("addedby")]
        public string Addedby { get; set; }

        [XmlAttributeAttribute("alias")]
        public string Alias { get; set; }

        [XmlAttributeAttribute("aggregate")]
        public string Aggregate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Aggregate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AggregateSpecified { get; set; }

        [XmlAttributeAttribute("groupby")]
        public FetchBoolType Groupby { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Groupby property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool GroupbySpecified { get; set; }

        [XmlAttributeAttribute("dategrouping")]
        public DateGroupingType Dategrouping { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dategrouping property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DategroupingSpecified { get; set; }

        [XmlAttributeAttribute("usertimezone")]
        public FetchBoolType Usertimezone { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Usertimezone property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UsertimezoneSpecified { get; set; }

        [XmlAttributeAttribute("distinct")]
        public FetchBoolType Distinct { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Distinct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DistinctSpecified { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("build", Namespace="")]
    public enum Build
    {

        [XmlEnumAttribute("1.504021")]
        Item1Period504021,

        [XmlEnumAttribute("1.003017")]
        Item1Period003017,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("AggregateType", Namespace="")]
    public enum AggregateType
    {

        [XmlEnumAttribute("count")]
        Count,

        [XmlEnumAttribute("countcolumn")]
        Countcolumn,

        [XmlEnumAttribute("sum")]
        Sum,

        [XmlEnumAttribute("avg")]
        Avg,

        [XmlEnumAttribute("min")]
        Min,

        [XmlEnumAttribute("max")]
        Max,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchBoolType", Namespace="")]
    public enum FetchBoolType
    {

        [XmlEnumAttribute("true")]
        True,

        [XmlEnumAttribute("false")]
        False,

        [XmlEnumAttribute("1")]
        One,

        [XmlEnumAttribute("0")]
        Zero,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("DateGroupingType", Namespace="")]
    public enum DateGroupingType
    {

        [XmlEnumAttribute("day")]
        Day,

        [XmlEnumAttribute("week")]
        Week,

        [XmlEnumAttribute("month")]
        Month,

        [XmlEnumAttribute("quarter")]
        Quarter,

        [XmlEnumAttribute("year")]
        Year,

        [XmlEnumAttribute("fiscal-period")]
        Fiscal_Period,

        [XmlEnumAttribute("fiscal-year")]
        Fiscal_Year,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchOrderType", Namespace="")]
    public partial class FetchOrderType
    {

        [XmlAttributeAttribute("attribute")]
        public string Attribute { get; set; }

        [XmlAttributeAttribute("alias")]
        public string Alias { get; set; }

        [XmlIgnoreAttribute()]
        private bool _descending = false;

        [DefaultValueAttribute(false)]
        [XmlAttributeAttribute("descending")]
        public bool Descending
        {
            get
            {
                return this._descending;
            }
            set
            {
                this._descending = value;
            }
        }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchLinkEntityType", Namespace="")]
    public partial class LinkedEntityType
    {

        [XmlIgnoreAttribute()]
        private Collection<AllAttributes> _all_Attributes;

        [XmlElementAttribute("all-attributes")]
        public Collection<AllAttributes> All_Attributes
        {
            get
            {
                return this._all_Attributes;
            }
            private set
            {
                this._all_Attributes = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the All_Attributes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AllAttributesSpecified
        {
            get
            {
                return (this.All_Attributes.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LinkedEntity" /> class.</para>
        /// </summary>
        public LinkedEntityType()
        {
            this._all_Attributes = new Collection<AllAttributes>();
            this._attribute = new Collection<Attribute>();
            this._order = new Collection<FetchOrderType>();
            this._filter = new Collection<Filter>();
            this._linkedEntity = new Collection<LinkedEntityType>();
        }

        [XmlIgnoreAttribute()]
        private Collection<Attribute> _attribute;

        [XmlElementAttribute("attribute")]
        public Collection<Attribute> Attribute
        {
            get
            {
                return this._attribute;
            }
            private set
            {
                this._attribute = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attribute collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AttributeSpecified
        {
            get
            {
                return (this.Attribute.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<FetchOrderType> _order;

        [XmlElementAttribute("order")]
        public Collection<FetchOrderType> Order
        {
            get
            {
                return this._order;
            }
            private set
            {
                this._order = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Order collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OrderSpecified
        {
            get
            {
                return (this.Order.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<Filter> _filter;

        [XmlElementAttribute("filter")]
        public Collection<Filter> Filter
        {
            get
            {
                return this._filter;
            }
            private set
            {
                this._filter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filter collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool FilterSpecified
        {
            get
            {
                return (this.Filter.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<LinkedEntityType> _linkedEntity;

        [XmlElementAttribute("link-entity")]
        public Collection<LinkedEntityType> LinkedEntity
        {
            get
            {
                return this._linkedEntity;
            }
            private set
            {
                this._linkedEntity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LinkedEntity collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LinkedEntitySpecified
        {
            get
            {
                return (this.LinkedEntity.Count != 0);
            }
        }

        [RequiredAttribute()]
        [XmlAttributeAttribute("name")]
        public string Name { get; set; }

        [XmlAttributeAttribute("to")]
        public string To { get; set; }

        [XmlAttributeAttribute("from")]
        public string From { get; set; }

        [XmlAttributeAttribute("alias")]
        public string Alias { get; set; }

        [XmlAttributeAttribute("link-type")]
        public string Link_Type { get; set; }

        [XmlAttributeAttribute("visible")]
        public bool Visible { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Visible property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool VisibleSpecified { get; set; }

        [XmlAttributeAttribute("intersect")]
        public bool Intersect { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Intersect property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IntersectSpecified { get; set; }

        [XmlAttributeAttribute("enableprefiltering")]
        public bool Enableprefiltering { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Enableprefiltering property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EnableprefilteringSpecified { get; set; }

        [XmlAttributeAttribute("prefilterparametername")]
        public string Prefilterparametername { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("all-attributes", Namespace="", AnonymousType=true)]
    [XmlRootAttribute("all-attributes", Namespace="")]
    public partial class AllAttributes
    {
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("filter", Namespace="", AnonymousType=true)]
    [XmlRootAttribute("filter", Namespace="")]
    public partial class Filter
    {
        [XmlIgnoreAttribute()]
        private Collection<Condition> _condition;

        [XmlElementAttribute("condition")]
        public Collection<Condition> Condition
        {
            get
            {
                return this._condition;
            }
            private set
            {
                this._condition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Condition collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return (this.Condition.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Filter" /> class.</para>
        /// </summary>
        public Filter()
        {
            this._condition = new Collection<Condition>();
            this._filterProperty = new Collection<Filter>();
        }

        [XmlIgnoreAttribute()]
        private Collection<Filter> _filterProperty;

        [XmlElementAttribute("filter")]
        public Collection<Filter> FilterProperty
        {
            get
            {
                return this._filterProperty;
            }
            private set
            {
                this._filterProperty = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FilterProperty collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool FilterPropertySpecified
        {
            get
            {
                return (this.FilterProperty.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private FilterType _type = FilterType.And;

        [DefaultValueAttribute(FilterType.And)]
        [XmlAttributeAttribute("type")]
        public FilterType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }

        [XmlAttributeAttribute("isquickfindfields")]
        public bool Isquickfindfields { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Isquickfindfields property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IsquickfindfieldsSpecified { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("condition", Namespace="", AnonymousType=true)]
    [XmlRootAttribute("condition", Namespace="")]
    public partial class Condition
    {
        [XmlIgnoreAttribute()]
        private Collection<ConditionValue> _value;

        [XmlElementAttribute("value")]
        public Collection<ConditionValue> Value
        {
            get
            {
                return this._value;
            }
            private set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Value collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ValueSpecified
        {
            get
            {
                return (this.Value.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Condition" /> class.</para>
        /// </summary>
        public Condition()
        {
            this._value = new Collection<ConditionValue>();
        }

        [XmlAttributeAttribute("value")]
        public string Value_1 { get; set; }

        [XmlAttributeAttribute("column")]
        public string Column { get; set; }

        [XmlAttributeAttribute("attribute")]
        public string Attribute { get; set; }

        [XmlAttributeAttribute("entityname")]
        public string Entityname { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("operator")]
        public string Operator { get; set; }

        [XmlAttributeAttribute("aggregate")]
        public AggregateType Aggregate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Aggregate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AggregateSpecified { get; set; }

        [XmlAttributeAttribute("rowaggregate")]
        public RowAggregateType Rowaggregate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rowaggregate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool RowaggregateSpecified { get; set; }

        [XmlAttributeAttribute("alias")]
        public string Alias { get; set; }

        [XmlAttributeAttribute("uiname")]
        public string Uiname { get; set; }

        [XmlAttributeAttribute("uitype")]
        public string Uitype { get; set; }

        [XmlAttributeAttribute("uihidden")]
        public TrueFalse01Type Uihidden { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Uihidden property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool UihiddenSpecified { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("ConditionValue", Namespace="")]
    public partial class ConditionValue
    {
        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [XmlTextAttribute()]
        public string Value { get; set; }

        [XmlAttributeAttribute("uiname")]
        public string Uiname { get; set; }

        [XmlAttributeAttribute("uitype")]
        public string Uitype { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("operator", Namespace="")]
    public enum Operator
    {

        [XmlEnumAttribute("eq")]
        Eq,

        [XmlEnumAttribute("neq")]
        Neq,

        [XmlEnumAttribute("ne")]
        Ne,

        [XmlEnumAttribute("gt")]
        Gt,

        [XmlEnumAttribute("ge")]
        Ge,

        [XmlEnumAttribute("le")]
        Le,

        [XmlEnumAttribute("lt")]
        Lt,

        [XmlEnumAttribute("like")]
        Like,

        [XmlEnumAttribute("not-like")]
        Not_Like,

        [XmlEnumAttribute("in")]
        In,

        [XmlEnumAttribute("not-in")]
        Not_In,

        [XmlEnumAttribute("between")]
        Between,

        [XmlEnumAttribute("not-between")]
        Not_Between,

        [XmlEnumAttribute("null")]
        Null,

        [XmlEnumAttribute("not-null")]
        Not_Null,

        [XmlEnumAttribute("yesterday")]
        Yesterday,

        [XmlEnumAttribute("today")]
        Today,

        [XmlEnumAttribute("tomorrow")]
        Tomorrow,

        [XmlEnumAttribute("last-seven-days")]
        Last_Seven_Days,

        [XmlEnumAttribute("next-seven-days")]
        Next_Seven_Days,

        [XmlEnumAttribute("last-week")]
        Last_Week,

        [XmlEnumAttribute("this-week")]
        This_Week,

        [XmlEnumAttribute("next-week")]
        Next_Week,

        [XmlEnumAttribute("last-month")]
        Last_Month,

        [XmlEnumAttribute("this-month")]
        This_Month,

        [XmlEnumAttribute("next-month")]
        Next_Month,

        [XmlEnumAttribute("on")]
        On,

        [XmlEnumAttribute("on-or-before")]
        On_Or_Before,

        [XmlEnumAttribute("on-or-after")]
        On_Or_After,

        [XmlEnumAttribute("last-year")]
        Last_Year,

        [XmlEnumAttribute("this-year")]
        This_Year,

        [XmlEnumAttribute("next-year")]
        Next_Year,

        [XmlEnumAttribute("last-x-hours")]
        Last_X_Hours,

        [XmlEnumAttribute("next-x-hours")]
        Next_X_Hours,

        [XmlEnumAttribute("last-x-days")]
        Last_X_Days,

        [XmlEnumAttribute("next-x-days")]
        Next_X_Days,

        [XmlEnumAttribute("last-x-weeks")]
        Last_X_Weeks,

        [XmlEnumAttribute("next-x-weeks")]
        Next_X_Weeks,

        [XmlEnumAttribute("last-x-months")]
        Last_X_Months,

        [XmlEnumAttribute("next-x-months")]
        Next_X_Months,

        [XmlEnumAttribute("olderthan-x-months")]
        Olderthan_X_Months,

        [XmlEnumAttribute("olderthan-x-years")]
        Olderthan_X_Years,

        [XmlEnumAttribute("olderthan-x-weeks")]
        Olderthan_X_Weeks,

        [XmlEnumAttribute("olderthan-x-days")]
        Olderthan_X_Days,

        [XmlEnumAttribute("olderthan-x-hours")]
        Olderthan_X_Hours,

        [XmlEnumAttribute("olderthan-x-minutes")]
        Olderthan_X_Minutes,

        [XmlEnumAttribute("last-x-years")]
        Last_X_Years,

        [XmlEnumAttribute("next-x-years")]
        Next_X_Years,

        [XmlEnumAttribute("eq-userid")]
        Eq_Userid,

        [XmlEnumAttribute("ne-userid")]
        Ne_Userid,

        [XmlEnumAttribute("eq-userteams")]
        Eq_Userteams,

        [XmlEnumAttribute("eq-useroruserteams")]
        Eq_Useroruserteams,

        [XmlEnumAttribute("eq-useroruserhierarchy")]
        Eq_Useroruserhierarchy,

        [XmlEnumAttribute("eq-useroruserhierarchyandteams")]
        Eq_Useroruserhierarchyandteams,

        [XmlEnumAttribute("eq-businessid")]
        Eq_Businessid,

        [XmlEnumAttribute("ne-businessid")]
        Ne_Businessid,

        [XmlEnumAttribute("eq-userlanguage")]
        Eq_Userlanguage,

        [XmlEnumAttribute("this-fiscal-year")]
        This_Fiscal_Year,

        [XmlEnumAttribute("this-fiscal-period")]
        This_Fiscal_Period,

        [XmlEnumAttribute("next-fiscal-year")]
        Next_Fiscal_Year,

        [XmlEnumAttribute("next-fiscal-period")]
        Next_Fiscal_Period,

        [XmlEnumAttribute("last-fiscal-year")]
        Last_Fiscal_Year,

        [XmlEnumAttribute("last-fiscal-period")]
        Last_Fiscal_Period,

        [XmlEnumAttribute("last-x-fiscal-years")]
        Last_X_Fiscal_Years,

        [XmlEnumAttribute("last-x-fiscal-periods")]
        Last_X_Fiscal_Periods,

        [XmlEnumAttribute("next-x-fiscal-years")]
        Next_X_Fiscal_Years,

        [XmlEnumAttribute("next-x-fiscal-periods")]
        Next_X_Fiscal_Periods,

        [XmlEnumAttribute("in-fiscal-year")]
        In_Fiscal_Year,

        [XmlEnumAttribute("in-fiscal-period")]
        In_Fiscal_Period,

        [XmlEnumAttribute("in-fiscal-period-and-year")]
        In_Fiscal_Period_And_Year,

        [XmlEnumAttribute("in-or-before-fiscal-period-and-year")]
        In_Or_Before_Fiscal_Period_And_Year,

        [XmlEnumAttribute("in-or-after-fiscal-period-and-year")]
        In_Or_After_Fiscal_Period_And_Year,

        [XmlEnumAttribute("begins-with")]
        Begins_With,

        [XmlEnumAttribute("not-begin-with")]
        Not_Begin_With,

        [XmlEnumAttribute("ends-with")]
        Ends_With,

        [XmlEnumAttribute("not-end-with")]
        Not_End_With,

        [XmlEnumAttribute("under")]
        Under,

        [XmlEnumAttribute("eq-or-under")]
        Eq_Or_Under,

        [XmlEnumAttribute("not-under")]
        Not_Under,

        [XmlEnumAttribute("above")]
        Above,

        [XmlEnumAttribute("eq-or-above")]
        Eq_Or_Above,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("RowAggregateType", Namespace="")]
    public enum RowAggregateType
    {

        [XmlEnumAttribute("countchildren")]
        Countchildren,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("TrueFalse01Type", Namespace="")]
    public enum TrueFalse01Type
    {

        [XmlEnumAttribute("0")]
        Item0,

        [XmlEnumAttribute("1")]
        Item1,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FilterType", Namespace="", AnonymousType=true)]
    public enum FilterType
    {
        [XmlEnumAttribute("and")]
        And,
        [XmlEnumAttribute("or")]
        Or,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchEntityType", Namespace="")]
    public partial class EntityType
    {
        [XmlIgnoreAttribute()]
        private Collection<AllAttributes> _all_Attributes;

        [XmlElementAttribute("all-attributes")]
        public Collection<AllAttributes> All_Attributes
        {
            get
            {
                return this._all_Attributes;
            }
            private set
            {
                this._all_Attributes = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the All_Attributes collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AllAttributesSpecified
        {
            get
            {
                return (this.All_Attributes.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EntityType" /> class.</para>
        /// </summary>
        public EntityType()
        {
            this._all_Attributes = new Collection<AllAttributes>();
            this._attribute = new Collection<Attribute>();
            this._order = new Collection<FetchOrderType>();
            this._linkedEntity = new Collection<LinkedEntityType>();
            this._filter = new Collection<Filter>();
        }

        [XmlIgnoreAttribute()]
        private Collection<Attribute> _attribute;

        [XmlElementAttribute("attribute")]
        public Collection<Attribute> Attribute
        {
            get
            {
                return this._attribute;
            }
            private set
            {
                this._attribute = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attribute collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AttributeSpecified
        {
            get
            {
                return (this.Attribute.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<FetchOrderType> _order;

        [XmlElementAttribute("order")]
        public Collection<FetchOrderType> Order
        {
            get
            {
                return this._order;
            }
            private set
            {
                this._order = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Order collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OrderSpecified
        {
            get
            {
                return (this.Order.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<LinkedEntityType> _linkedEntity;

        [XmlElementAttribute("link-entity")]
        public Collection<LinkedEntityType> LinkedEntity
        {
            get
            {
                return this._linkedEntity;
            }
            private set
            {
                this._linkedEntity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LinkedEntity collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LinkedEntitySpecified
        {
            get
            {
                return (this.LinkedEntity.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<Filter> _filter;

        [XmlElementAttribute("filter")]
        public Collection<Filter> Filter
        {
            get
            {
                return this._filter;
            }
            private set
            {
                this._filter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filter collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool FilterSpecified
        {
            get
            {
                return (this.Filter.Count != 0);
            }
        }

        [RequiredAttribute()]
        [XmlAttributeAttribute("name")]
        public string Name { get; set; }

        [XmlAttributeAttribute("enableprefiltering")]
        public bool Enableprefiltering { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Enableprefiltering property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EnableprefilteringSpecified { get; set; }

        [XmlAttributeAttribute("prefilterparametername")]
        public string Prefilterparametername { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchType", Namespace="")]
    [XmlRootAttribute("fetch", Namespace="")]
    public partial class FetchType
    {

        [XmlIgnoreAttribute()]
        private Collection<EntityType> _entity;

        [XmlElementAttribute("entity")]
        public Collection<EntityType> Entity
        {
            get
            {
                return this._entity;
            }
            private set
            {
                this._entity = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Entity collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool EntitySpecified
        {
            get
            {
                return (this.Entity.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FetchType" /> class.</para>
        /// </summary>
        public FetchType()
        {
            this._entity = new Collection<EntityType>();
            this._order = new Collection<FetchOrderType>();
        }

        [XmlIgnoreAttribute()]
        private Collection<FetchOrderType> _order;

        [XmlElementAttribute("order")]
        public Collection<FetchOrderType> Order
        {
            get
            {
                return this._order;
            }
            private set
            {
                this._order = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Order collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OrderSpecified
        {
            get
            {
                return (this.Order.Count != 0);
            }
        }

        [XmlAttributeAttribute("version")]
        public string Version { get; set; }

        [XmlAttributeAttribute("count")]
        public int Count { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Count property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool CountSpecified { get; set; }

        [XmlAttributeAttribute("page")]
        public int Page { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Page property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool PageSpecified { get; set; }

        [XmlAttributeAttribute("paging-cookie")]
        public string Paging_Cookie { get; set; }

        [XmlAttributeAttribute("utc-offset")]
        public string Utc_Offset { get; set; }

        [XmlAttributeAttribute("aggregate")]
        public bool Aggregate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Aggregate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AggregateSpecified { get; set; }

        [XmlAttributeAttribute("distinct")]
        public bool Distinct { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Distinct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DistinctSpecified { get; set; }

        [XmlAttributeAttribute("top")]
        public int Top { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Top property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool TopSpecified { get; set; }

        [XmlAttributeAttribute("mapping")]
        public FetchTypeMapping Mapping { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mapping property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool MappingSpecified { get; set; }

        [XmlIgnoreAttribute()]
        private bool _min_Active_Row_Version = false;

        [DefaultValueAttribute(false)]
        [XmlAttributeAttribute("min-active-row-version")]
        public bool Min_Active_Row_Version
        {
            get
            {
                return this._min_Active_Row_Version;
            }
            set
            {
                this._min_Active_Row_Version = value;
            }
        }

        [XmlAttributeAttribute("output-format")]
        public FetchTypeOutput_Format Output_Format { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Output_Format property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool Output_FormatSpecified { get; set; }

        [XmlIgnoreAttribute()]
        private bool _returntotalrecordcount = false;

        [DefaultValueAttribute(false)]
        [XmlAttributeAttribute("returntotalrecordcount")]
        public bool Returntotalrecordcount
        {
            get
            {
                return this._returntotalrecordcount;
            }
            set
            {
                this._returntotalrecordcount = value;
            }
        }

        [XmlIgnoreAttribute()]
        private bool _no_Lock = false;

        [DefaultValueAttribute(false)]
        [XmlAttributeAttribute("no-lock")]
        public bool No_Lock
        {
            get
            {
                return this._no_Lock;
            }
            set
            {
                this._no_Lock = value;
            }
        }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchTypeMapping", Namespace="", AnonymousType=true)]
    public enum FetchTypeMapping
    {

        [XmlEnumAttribute("internal")]
        Internal,

        [XmlEnumAttribute("logical")]
        Logical,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FetchTypeOutput_Format", Namespace="", AnonymousType=true)]
    public enum FetchTypeOutput_Format
    {

        [XmlEnumAttribute("xml-ado")]
        Xml_Ado,

        [XmlEnumAttribute("xml-auto")]
        Xml_Auto,

        [XmlEnumAttribute("xml-elements")]
        Xml_Elements,

        [XmlEnumAttribute("xml-raw")]
        Xml_Raw,

        [XmlEnumAttribute("xml-platform")]
        Xml_Platform,
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SerializedInteger", Namespace="")]
    public partial class SerializedInteger
    {

        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [XmlTextAttribute()]
        public int Value { get; set; }

        [XmlAttributeAttribute("formattedvalue")]
        public string Formattedvalue { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SerializedTrueFalse01Type", Namespace="")]
    public partial class SerializedTrueFalse01Type
    {

        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [XmlTextAttribute()]
        public TrueFalse01Type Value { get; set; }

        [XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("LocalizedNamesType", Namespace="")]
    public partial class LocalizedNamesType
    {

        [XmlIgnoreAttribute()]
        private Collection<FieldXmlFieldUIType> _localizedName;

        [XmlElementAttribute("LocalizedName")]
        public Collection<FieldXmlFieldUIType> LocalizedName
        {
            get
            {
                return this._localizedName;
            }
            private set
            {
                this._localizedName = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LocalizedName collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool LocalizedNameSpecified
        {
            get
            {
                return (this.LocalizedName.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LocalizedNamesType" /> class.</para>
        /// </summary>
        public LocalizedNamesType()
        {
            this._localizedName = new Collection<FieldXmlFieldUIType>();
        }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("FieldXmlFieldUIType", Namespace="")]
    public partial class FieldXmlFieldUIType
    {

        /// <summary>
        /// <para xml:lang="en">Pattern: \{?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}?.</para>
        /// </summary>
        [RegularExpressionAttribute("\\{?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\}?" +
            "")]
        [XmlAttributeAttribute("id")]
        public string Id { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("description")]
        public string Description { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("languagecode")]
        public int Languagecode { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("DescriptionsType", Namespace="")]
    public partial class DescriptionsType
    {

        [XmlIgnoreAttribute()]
        private Collection<FieldXmlFieldUIType> _description;

        [XmlElementAttribute("Description")]
        public Collection<FieldXmlFieldUIType> Description
        {
            get
            {
                return this._description;
            }
            private set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Description collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DescriptionSpecified
        {
            get
            {
                return (this.Description.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DescriptionsType" /> class.</para>
        /// </summary>
        public DescriptionsType()
        {
            this._description = new Collection<FieldXmlFieldUIType>();
        }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("ColorsType", Namespace="")]
    public partial class ColorsType
    {

        [XmlIgnoreAttribute()]
        private Collection<FieldXmlFieldUIType> _color;

        [XmlElementAttribute("Color")]
        public Collection<FieldXmlFieldUIType> Color
        {
            get
            {
                return this._color;
            }
            private set
            {
                this._color = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Color collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ColorSpecified
        {
            get
            {
                return (this.Color.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ColorsType" /> class.</para>
        /// </summary>
        public ColorsType()
        {
            this._color = new Collection<FieldXmlFieldUIType>();
        }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("savedquery", Namespace="", AnonymousType=true)]
    [XmlRootAttribute("savedquery", Namespace="")]
    public partial class Savedquery
    {

        [RequiredAttribute()]
        [XmlElementAttribute("name")]
        public string Name { get; set; }

        /// <summary>
        /// <para xml:lang="en">Pattern: \{?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}?.</para>
        /// </summary>
        [RegularExpressionAttribute("\\{?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\}?" +
            "")]
        [RequiredAttribute()]
        [XmlElementAttribute("savedqueryid")]
        public string Savedqueryid { get; set; }

        [RequiredAttribute()]
        [XmlElementAttribute("returnedtypecode")]
        public SerializedInteger Returnedtypecode { get; set; }

        [XmlElementAttribute("description")]
        public string Description { get; set; }

        [RequiredAttribute()]
        [XmlElementAttribute("querytype")]
        public SerializedInteger Querytype { get; set; }

        [XmlElementAttribute("IsCustomizable")]
        public SerializedTrueFalse01Type IsCustomizable { get; set; }

        [XmlElementAttribute("CanBeDeleted")]
        public SerializedTrueFalse01Type CanBeDeleted { get; set; }

        /// <summary>
        /// <para xml:lang="en">The representation of a Version number.</para>
        /// <para xml:lang="en">Pattern: ^[0-9]+(\.[0-9]+){1,3}$.</para>
        /// </summary>
        [RegularExpressionAttribute("^[0-9]+(\\.[0-9]+){1,3}$")]
        [XmlElementAttribute("IntroducedVersion")]
        public string IntroducedVersion { get; set; }

        [XmlElementAttribute("isquickfindquery")]
        public SerializedTrueFalse01Type Isquickfindquery { get; set; }

        [XmlElementAttribute("isuserdefined")]
        public SerializedTrueFalse01Type Isuserdefined { get; set; }

        [XmlElementAttribute("isdefault")]
        public SerializedTrueFalse01Type Isdefault { get; set; }

        [XmlElementAttribute("isprivate")]
        public bool Isprivate { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Isprivate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IsprivateSpecified { get; set; }

        [XmlElementAttribute("queryapi")]
        public string Queryapi { get; set; }

        [XmlElementAttribute("fetchxml")]
        public SavedqueryFetchxml Fetchxml { get; set; }

        [XmlElementAttribute("columnsetxml")]
        public SavedqueryColumnsetxml Columnsetxml { get; set; }

        [XmlElementAttribute("layoutxml")]
        public SavedqueryLayoutxml Layoutxml { get; set; }

        [XmlAttributeAttribute("donotuseinLCID")]
        public string DonotuseinLCID { get; set; }

        [XmlAttributeAttribute("useinLCID")]
        public string UseinLCID { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryFetchxml", Namespace="", AnonymousType=true)]
    public partial class SavedqueryFetchxml
    {

        [XmlElementAttribute("fetch")]
        public FetchType Fetch { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryColumnsetxml", Namespace="", AnonymousType=true)]
    public partial class SavedqueryColumnsetxml
    {

        [XmlElementAttribute("columnset")]
        public SavedqueryColumnsetxmlColumnset Columnset { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryColumnsetxmlColumnset", Namespace="", AnonymousType=true)]
    public partial class SavedqueryColumnsetxmlColumnset
    {

        [XmlIgnoreAttribute()]
        private Collection<SavedqueryColumnsetxmlColumnsetColumn> _column;

        [XmlElementAttribute("column")]
        public Collection<SavedqueryColumnsetxmlColumnsetColumn> Column
        {
            get
            {
                return this._column;
            }
            private set
            {
                this._column = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Column collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool ColumnSpecified
        {
            get
            {
                return (this.Column.Count != 0);
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SavedqueryColumnsetxmlColumnset" /> class.</para>
        /// </summary>
        public SavedqueryColumnsetxmlColumnset()
        {
            this._column = new Collection<SavedqueryColumnsetxmlColumnsetColumn>();
            this._ascend = new Collection<object>();
            this._descend = new Collection<object>();
            this._filter = new Collection<SavedqueryColumnsetxmlColumnsetFilter>();
        }

        [XmlIgnoreAttribute()]
        private Collection<object> _ascend;

        [XmlElementAttribute("ascend")]
        public Collection<object> Ascend
        {
            get
            {
                return this._ascend;
            }
            private set
            {
                this._ascend = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Ascend collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool AscendSpecified
        {
            get
            {
                return (this.Ascend.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<object> _descend;

        [XmlElementAttribute("descend")]
        public Collection<object> Descend
        {
            get
            {
                return this._descend;
            }
            private set
            {
                this._descend = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Descend collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DescendSpecified
        {
            get
            {
                return (this.Descend.Count != 0);
            }
        }

        [XmlIgnoreAttribute()]
        private Collection<SavedqueryColumnsetxmlColumnsetFilter> _filter;

        [XmlElementAttribute("filter")]
        public Collection<SavedqueryColumnsetxmlColumnsetFilter> Filter
        {
            get
            {
                return this._filter;
            }
            private set
            {
                this._filter = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Filter collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool FilterSpecified
        {
            get
            {
                return (this.Filter.Count != 0);
            }
        }

        [XmlAttributeAttribute("version")]
        public string Version { get; set; }

        [XmlAttributeAttribute("distinct")]
        public bool Distinct { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Distinct property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DistinctSpecified { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryColumnsetxmlColumnsetColumn", Namespace="")]
    public partial class SavedqueryColumnsetxmlColumnsetColumn
    {

        /// <summary>
        /// <para xml:lang="en">Gets or sets the text value.</para>
        /// </summary>
        [XmlTextAttribute()]
        public string Value { get; set; }

        [XmlAttributeAttribute("build")]
        public Build Build { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Build property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool BuildSpecified { get; set; }

        [XmlAttributeAttribute("addedby")]
        public string Addedby { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryColumnsetxmlColumnsetFilter", Namespace="", AnonymousType=true)]
    public partial class SavedqueryColumnsetxmlColumnsetFilter
    {

        [XmlIgnoreAttribute()]
        private Collection<SavedqueryColumnsetxmlColumnsetFilterCondition> _condition;

        [RequiredAttribute()]
        [XmlElementAttribute("condition")]
        public Collection<SavedqueryColumnsetxmlColumnsetFilterCondition> Condition
        {
            get
            {
                return this._condition;
            }
            private set
            {
                this._condition = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SavedqueryColumnsetxmlColumnsetFilter" /> class.</para>
        /// </summary>
        public SavedqueryColumnsetxmlColumnsetFilter()
        {
            this._condition = new Collection<SavedqueryColumnsetxmlColumnsetFilterCondition>();
        }

        [XmlAttributeAttribute("column")]
        public string Column { get; set; }

        [XmlAttributeAttribute("operator")]
        public Operator Operator { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Operator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OperatorSpecified { get; set; }

        [XmlAttributeAttribute("value")]
        public string Value { get; set; }

        [XmlAttributeAttribute("type")]
        public string Type { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryColumnsetxmlColumnsetFilterCondition", Namespace="", AnonymousType=true)]
    public partial class SavedqueryColumnsetxmlColumnsetFilterCondition
    {

        [RequiredAttribute()]
        [XmlAttributeAttribute("column")]
        public string Column { get; set; }

        [XmlAttributeAttribute("operator")]
        public Operator Operator { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Operator property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool OperatorSpecified { get; set; }

        [XmlAttributeAttribute("value")]
        public string Value { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryLayoutxml", Namespace="", AnonymousType=true)]
    public partial class SavedqueryLayoutxml
    {

        [XmlElementAttribute("grid")]
        public SavedqueryLayoutxmlGrid Grid { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryLayoutxmlGrid", Namespace="", AnonymousType=true)]
    public partial class SavedqueryLayoutxmlGrid
    {

        [RequiredAttribute()]
        [XmlElementAttribute("row")]
        public SavedqueryLayoutxmlGridRow Row { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("name")]
        public string Name { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("select")]
        public bool Select { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("preview")]
        public string Preview { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("icon")]
        public string Icon { get; set; }

        [XmlAttributeAttribute("jump")]
        public string Jump { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("object")]
        public int Object { get; set; }

        [XmlAttributeAttribute("disableInlineEditing")]
        public int DisableInlineEditing { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisableInlineEditing property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DisableInlineEditingSpecified { get; set; }

        [XmlAttributeAttribute("iconrenderer")]
        public string Iconrenderer { get; set; }

        [XmlAttributeAttribute("multilinerows")]
        public string Multilinerows { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryLayoutxmlGridRow", Namespace="", AnonymousType=true)]
    public partial class SavedqueryLayoutxmlGridRow
    {

        [XmlIgnoreAttribute()]
        private Collection<SavedqueryLayoutxmlGridRowCell> _cell;

        [RequiredAttribute()]
        [XmlElementAttribute("cell")]
        public Collection<SavedqueryLayoutxmlGridRowCell> Cell
        {
            get
            {
                return this._cell;
            }
            private set
            {
                this._cell = value;
            }
        }

        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SavedqueryLayoutxmlGridRow" /> class.</para>
        /// </summary>
        public SavedqueryLayoutxmlGridRow()
        {
            this._cell = new Collection<SavedqueryLayoutxmlGridRowCell>();
        }

        [RequiredAttribute()]
        [XmlAttributeAttribute("name")]
        public string Name { get; set; }

        [RequiredAttribute()]
        [XmlAttributeAttribute("id")]
        public string Id { get; set; }

        [XmlAttributeAttribute("multiobjectidfield")]
        public string Multiobjectidfield { get; set; }

        [XmlAttributeAttribute("layoutstyle")]
        public string Layoutstyle { get; set; }
    }

    [SerializableAttribute()]
    [XmlTypeAttribute("SavedqueryLayoutxmlGridRowCell", Namespace="", AnonymousType=true)]
    public partial class SavedqueryLayoutxmlGridRowCell
    {

        [RequiredAttribute()]
        [XmlAttributeAttribute("name")]
        public string Name { get; set; }

        [XmlAttributeAttribute("width")]
        public int Width { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }

        [XmlAttributeAttribute("LabelId")]
        public string LabelId { get; set; }

        [XmlAttributeAttribute("label")]
        public string Label { get; set; }

        [XmlAttributeAttribute("desc")]
        public string Desc { get; set; }

        [XmlAttributeAttribute("ishidden")]
        public int Ishidden { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ishidden property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool IshiddenSpecified { get; set; }

        [XmlAttributeAttribute("disableSorting")]
        public int DisableSorting { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisableSorting property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DisableSortingSpecified { get; set; }

        [XmlAttributeAttribute("disableMetaDataBinding")]
        public int DisableMetaDataBinding { get; set; }

        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisableMetaDataBinding property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool DisableMetaDataBindingSpecified { get; set; }

        [XmlAttributeAttribute("cellType")]
        public string CellType { get; set; }

        [XmlAttributeAttribute("imageproviderwebresource")]
        public string Imageproviderwebresource { get; set; }

        [XmlAttributeAttribute("imageproviderfunctionname")]
        public string Imageproviderfunctionname { get; set; }
    }
}
